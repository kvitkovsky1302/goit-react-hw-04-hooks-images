{"version":3,"sources":["App.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/Searchbar/Searchbar.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Loader/Loader.module.css","components/SearchForm/SearchForm.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Loader/Loader.js","components/Modal/Modal.js","service/fetchImages.js","App.js","index.js","components/SearchForm/SearchForm.module.css"],"names":["module","exports","SearchForm","onSubmit","onChange","value","className","s","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","Searchbar","useState","searchQuery","setSearchQuery","e","preventDefault","toast","error","currentTarget","toLowerCase","ImageGalleryItem","props","webformatURL","largeImageURL","onOpenModal","onClick","target","dataset","large","src","alt","ImageGalleryItemImage","ImageGallery","imagePage","map","id","Button","Loader","loader","color","height","width","modalRoot","document","querySelector","Modal","onClose","bigImageUrl","handleKeyDown","code","window","removeEventListener","useEffect","addEventListener","createPortal","Overlay","API_KEY","BASE_URL","page","a","url","fetch","response","json","images","fetchImages","App","setImagePage","setPage","total","setTotal","loading","setLoading","showModal","setShowModal","setBigImageUrl","toggleModal","fetchImagePages","hits","prevImagePage","scrollTo","top","documentElement","scrollHeight","behavior","prevPage","notificationText","autoClose","position","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.33d7ab2d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"notificationText\":\"App_notificationText__2ImDe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3CvRl\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__2bkPr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2AxMb\",\"Modal\":\"Modal_Modal__2WBTT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__DjWH3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__DncjJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3R1xi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__1j2Bs\"};","import PropTypes from 'prop-types';\nimport s from './SearchForm.module.css';\n\nfunction SearchForm({ onSubmit, onChange, value }) {\n  return (\n    <form className={s.SearchForm} onSubmit={onSubmit}>\n      <button type=\"submit\" className={s.SearchFormButton}>\n        <span className={s.SearchFormButtonLabel}>Search</span>\n      </button>\n\n      <input\n        className={s.SearchFormInput}\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        onChange={onChange}\n        value={value}\n        placeholder=\"Search images and photos\"\n      />\n    </form>\n  );\n}\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string,\n};\n\nexport default SearchForm;\n","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport s from './Searchbar.module.css';\nimport SearchForm from '../SearchForm';\n\nfunction Searchbar({ onSubmit }) {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleSearchQuery = e => {\n    setSearchQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(searchQuery);\n    setSearchQuery('');\n    if (searchQuery === '') {\n      toast.error('Please, enter your request!');\n    }\n  };\n\n  return (\n    <header className={s.Searchbar}>\n      <SearchForm\n        onSubmit={handleSubmit}\n        onChange={handleSearchQuery}\n        value={searchQuery}\n      />\n    </header>\n  );\n}\n\nexport default Searchbar;\n","import PropTypes from 'prop-types';\nimport s from './ImageGalleryItem.module.css';\n\nfunction ImageGalleryItem(props) {\n  const { webformatURL, largeImageURL, onOpenModal } = props;\n  return (\n    <li className={s.ImageGalleryItem}>\n      <img\n        onClick={e => {\n          onOpenModal(e.target.dataset.large);\n        }}\n        src={webformatURL}\n        alt=\"\"\n        className={s.ImageGalleryItemImage}\n        data-large={largeImageURL}\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  onOpenModal: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import ImageGalleryItem from '../ImageGalleryItem';\nimport PropTypes from 'prop-types';\nimport s from './ImageGallery.module.css';\n\nfunction ImageGallery(props) {\n  const { imagePage, onOpenModal } = props;\n\n  return (\n    <ul className={s.ImageGallery}>\n      {imagePage.map(({ id, webformatURL, largeImageURL }) => {\n        return (\n          <ImageGalleryItem\n            key={id}\n            webformatURL={webformatURL}\n            largeImageURL={largeImageURL}\n            onOpenModal={onOpenModal}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  imagePage: PropTypes.arrayOf(PropTypes.shape).isRequired,\n  onOpenModal: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","import PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nfunction Button({ onClick }) {\n  return (\n    <button className={s.Button} type=\"button\" onClick={onClick}>\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import LoaderSpiner from 'react-loader-spinner';\nimport s from './Loader.module.css';\n\nfunction Loader() {\n  return (\n    <LoaderSpiner\n      className={s.loader}\n      type=\"Circles\"\n      color=\"#3f51b5\"\n      height={100}\n      width={100}\n    />\n  );\n}\n\nexport default Loader;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nfunction Modal({ onClose, bigImageUrl }) {\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      window.removeEventListener('keydown', handleKeyDown);\n      onClose();\n    }\n  };\n\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      window.removeEventListener('keydown', handleKeyDown);\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n  });\n\n  return createPortal(\n    <div className={s.Overlay} onClick={handleBackdropClick}>\n      <div className={s.Modal}>\n        <img src={bigImageUrl} alt=\"\" />\n      </div>\n    </div>,\n    modalRoot,\n  );\n}\n\nexport default Modal;\n","const API_KEY = '22470352-c65ac8cc67498f5a0ef8fcd03';\nconst BASE_URL = 'https://pixabay.com/api';\n\nasync function fetchImages(searchQuery, page) {\n  const url = `${BASE_URL}/?image_type=photo&orientation=horizontal&q=${searchQuery}&page=${page}&per_page=12&key=${API_KEY}`;\n\n  const response = await fetch(url);\n  const images = await response.json();\n\n  return images;\n}\n\nexport default fetchImages;\n","import { useEffect, useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport s from './App.module.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Loader from './components/Loader';\nimport Modal from './components/Modal';\nimport fetchImages from './service/fetchImages';\n\nfunction App() {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [imagePage, setImagePage] = useState([]);\n  const [page, setPage] = useState(1);\n  const [total, setTotal] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [bigImageUrl, setBigImageUrl] = useState('');\n\n  const toggleModal = bigImageUrl => {\n    setShowModal(!showModal);\n    setBigImageUrl(bigImageUrl);\n  };\n\n  const formSubmitHandler = value => {\n    setImagePage([]);\n    setSearchQuery(value);\n  };\n\n  const handleClickMoreImages = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  useEffect(() => {\n    const fetchImagePages = async (searchQuery, page) => {\n      const { hits, total } = await fetchImages(searchQuery, page);\n      const images = hits.map(({ id, webformatURL, largeImageURL }) => {\n        return { id, webformatURL, largeImageURL };\n      });\n      setImagePage(prevImagePage => [...prevImagePage, ...images]);\n      setLoading(false);\n      setTotal(total);\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    };\n\n    setLoading(true);\n    fetchImagePages(searchQuery, page);\n  }, [searchQuery, page]);\n\n  return (\n    <div className={s.App}>\n      <Searchbar onSubmit={formSubmitHandler} />\n      <ImageGallery\n        searchQuery={searchQuery}\n        imagePage={imagePage}\n        onOpenModal={toggleModal}\n      />\n      {loading && <Loader />}\n      {total > 0 && <Button onClick={handleClickMoreImages} />}\n      {!loading && total === 0 && (\n        <p className={s.notificationText}>\n          Sorry, we do not have any images for your request\n        </p>\n      )}\n      {showModal && <Modal onClose={toggleModal} bigImageUrl={bigImageUrl} />}\n      <ToastContainer\n        autoClose={2000}\n        position=\"top-right\"\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchForm\":\"SearchForm_SearchForm__2KF2z\",\"SearchFormButton\":\"SearchForm_SearchFormButton__3cKhM\",\"SearchFormButtonLabel\":\"SearchForm_SearchFormButtonLabel__2gNSS\",\"SearchFormInput\":\"SearchForm_SearchFormInput__1rGBp\"};"],"sourceRoot":""}